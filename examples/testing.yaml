---
name: ErrorRateByService
lookback: 15m
trigger:
  webhook:
    output:
      service: "job"
      span: "span_name"
      timestamp: "startsAt"
# Available data fields {service: string,span: string,timestamp: string}
steps:
- name: Get ownership
  integration: backstage
  function: get_properties_values
  input:
    filter: kind=component,metadata.name={service}
  output:
    components:
      - owner: "spec.owner"
        slack_channel: "metadata.labels.slack_channel"
# - name: Inspect traces
#   integration: jeager
#   function: get_properties_values
#   input:
#     service: "{service}"
#     tags: "{'error': true}"
#   ouput:
#     log_occurances:
#       - count: sum()
#         log: "logs:exception.stacktrace | tags:grpc.error_message"
#   condition: empty(additional_context.log_occurances)
- name: Send to slack channel
  integration: slack
  function: post_message
  input:
    parsable_context_object: "."
    ingore_context_keys:
    - additional_context.components[].slack_channel
    