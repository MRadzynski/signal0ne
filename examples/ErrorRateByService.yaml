---
name: ErrorRateByService
lookback: 15m
trigger:
  webhook:
    integration: alertmanager
    service: "labels.job"
    output:
      alertname: "labels.alertname"
      span: "span_name"
      timestamp: "startsAt"
    condition: "{{ if eq .TriggerProperties.alertname \"ErrorRateByService\" }}true{{ else }}false{{ end }}"
steps:
- displayName: Get ownership
  name: get_ownership
  integration: backstage
  function: get_properties_values
  input:
    filter: kind=component,metadata.name={{.Service}}
  output:
    owner: "spec.owner"
    slack_channel: "metadata.labels.slack_channel"
    repo_name: "metadata.labels.repo_name"
- displayName: Get relevant logs
  name: get_relevant_logs
  integration: opensearch
  function: get_log_occurrences
  input:
    service: "{{.Service}}"
    query: "{\"query\": {\"bool\": {\"must\": [{\"match\": {\"resource.service.name\": \"{{.Service}}\"}},{\"range\": {\"@timestamp\": {\"gte\": \"{{date .TriggerProperties.timestamp \"-15m\" \"rfc\"}}\",\"lte\": \"{{date .TriggerProperties.timestamp \"+15m\" \"rfc\"}}\"}}}],\"must_not\": [{\"match\": {\"severity.text\": \"INFO\"}},{\"match\": {\"severity.text\": \"Information\"}}]}}}"
    compare_by: "body, resource.host.name"
  output:
    output_source: "output_source"
    count: "count"
    body: "body"
    hostname: "resource.host.name"
- displayName: Inspect traces
  name: inspect_traces
  integration: jaeger
  function: get_properties_values
  input:
    service: "{{.Service}}"
    tags: "{\"error\":\"true\"}"
    query: "&start={{date .TriggerProperties.timestamp \"-0m\" \"ts\"}}&lookback=15m&maxDuration&minDuration"
    compare_by: "logs.exception.stacktrace, tags.grpc.error_message, logs.exception.message, tags.otel.status_description"
  output:
    output_source: "output_source"
    count: "count"
    log: "logs.exception.stacktrace, tags.grpc.error_message, logs.exception.message, tags.otel.status_description"
  condition: "{{if eq (len .AdditionalContext.opensearch_get_relevant_logs) 0}}true{{else}}false{{end}}"
- displayName: Get dependency map
  name: get_dependencies
  integration: jaeger
  function: get_dependencies
  input:
    service: "{{.Service}}"
  output:
    dependency_map: "dependency_map"
- displayName: Get relevant alerts
  name: correlate_ongoing_alerts
  integration: signal0ne
  function: correlate_ongoing_alerts
  input:
    startTimestamp: "{{date .TriggerProperties.timestamp \"-0m\" \"rfc\"}}"
    dependency_map: "{{index .AdditionalContext.jaeger_get_dependencies 0 \"dependency_map\"}}"
  output:
    alertId: "alertId"
    service: "service"
    state: "state"
    name: "name"
    dependency_map: "dependency_map"
- displayName: Get latest GH action run
  name: get_latest_gh_action_run
  integration: github
  function: inspect_github_actions
  input:
    action_name: "Deploy to Remote Server"
    repo_name: "{{index .AdditionalContext.backstage_get_ownership 0 \"repo_name\"}}"
    branch_name: "main"
  output:
    commitId: "commit"
    status: "status"
- displayName: Get code diff
  name: get_code_diff
  integration: github
  function: get_commit_diff
  input:
    repo_name: "{{index .AdditionalContext.backstage_get_ownership 0 \"repo_name\"}}"
    commit: "{{index .AdditionalContext.github_get_latest_gh_action_run 0 \"commitId\"}}"
  output:
    diff: "diff"
- displayName: Summarize whole context
  name: summarize_issue_content
  integration: openai
  function: summarize_context
  input:
    context: "{{root}}"
  output:
    summary: "summary"
- displayName: Send to slack channel
  name: send_to_slack
  integration: slack
  function: post_message
  input:
    slack_channel: "{{range .AdditionalContext.backstage_get_ownership}}{{.slack_channel}},{{end}}"
    parsable_context_object: "{{root}}"
    additional_message_payload: "{\"service\": \"{{.Service}}\"}"

