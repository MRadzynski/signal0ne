---
name: ErrorRateByService
lookback: 15m
trigger:
  webhook:
    mappping:
      job: service
      span_name: span
      startsAt: timestamp
# Available data fields {service,span,timestamp}
steps:
- name: Get ownership
  integration: backstage
  input:
    filter: kind=component,metadata.name={service}
  output:
      spec.owner: string
      metadata.labels.slack_channel: string
  mapping:
    "spec.owner": owner
    "metadata.labels.slack_channel": channel
# Available data fields {service,span,timestamp, owner, channel}
- name: Get relevant logs
  integration: opensearch
  input:
    query: "{'query': {'bool': {'must': [{'match': {resource.name: {service}}},{'range': {timestamp: {'gte': {timestamp - 15m},'lte': {timestamp}}}}],'must_not': [{'match': {'severity.text': 'INFO'}},{'match': {'severity.text': 'Information'}}]}}}"
  output:
    - body
    - resource:host.name
  mapping:
    "resource:host.name": host
# Available data fields {service,span,timestamp, owner, channel, body, host}
- name: Inspect traces
  integration: jeager
  config:
    tags:
      error: 'true'
    desired_enrichments:
    - logs
    conditions:
    - if_empty: additional_context.occured_error_logs
- name: Correlate alerts
  integration: signal0ne
  config:
    desired_enrichments:
    - alerts-ongoing
- name: Summarize context
  integration: openai
  config: {}
- name: Send to slack channel
  integration: slack
  config:
    mappings:
      channel: metadata.labels.slack_channel
    ingore_context_keys:
    - metadata.labels.slack_channel
